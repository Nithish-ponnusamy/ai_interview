version: "3.8"

services:
  backend-staging:
    image: ${BACKEND_IMAGE}:${DOCKER_TAG}
    container_name: resume-backend-staging
    ports:
      - "${BACKEND_PORT}:5000"
    environment:
      - NODE_ENV=staging
      - PORT=5000
      - API_URL=http://localhost:${BACKEND_PORT}
    volumes:
      - staging_uploads:/app/uploads
      - staging_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - staging-network

  frontend-staging:
    image: ${FRONTEND_IMAGE}:${DOCKER_TAG}
    container_name: resume-frontend-staging
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - REACT_APP_API_URL=http://localhost:${BACKEND_PORT}
      - REACT_APP_ENVIRONMENT=staging
    depends_on:
      backend-staging:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - staging-network

  # Optional: Staging database
  mongodb-staging:
    image: mongo:6.0
    container_name: resume-mongodb-staging
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=staging_password
      - MONGO_INITDB_DATABASE=resume_staging
    volumes:
      - staging_mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - staging-network

volumes:
  staging_uploads:
  staging_logs:
  staging_mongodb_data:

networks:
  staging-network:
    driver: bridge
