version: "3.8"

services:
  backend-production:
    image: ${BACKEND_IMAGE}:${DOCKER_TAG}
    container_name: resume-backend-production
    ports:
      - "${BACKEND_PORT}:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - API_URL=http://localhost:${BACKEND_PORT}
    volumes:
      - production_uploads:/app/uploads
      - production_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - production-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  frontend-production:
    image: ${FRONTEND_IMAGE}:${DOCKER_TAG}
    container_name: resume-frontend-production
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      - REACT_APP_API_URL=http://localhost:${BACKEND_PORT}
      - REACT_APP_ENVIRONMENT=production
    depends_on:
      backend-production:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - production-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Production database
  mongodb-production:
    image: mongo:6.0
    container_name: resume-mongodb-production
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=resume_production
    volumes:
      - production_mongodb_data:/data/db
      - ./deployment/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - production-network

  # Nginx reverse proxy (optional)
  nginx-proxy:
    image: nginx:alpine
    container_name: resume-nginx-proxy
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend-production
      - backend-production
    restart: unless-stopped
    networks:
      - production-network

volumes:
  production_uploads:
  production_logs:
  production_mongodb_data:

networks:
  production-network:
    driver: bridge
