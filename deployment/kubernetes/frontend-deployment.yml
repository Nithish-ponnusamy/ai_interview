apiVersion: apps/v1
kind: Deployment
metadata:
  name: resume-frontend
  namespace: default
  labels:
    app: resume-frontend
    tier: frontend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: resume-frontend
      tier: frontend
  template:
    metadata:
      labels:
        app: resume-frontend
        tier: frontend
    spec:
      containers:
        - name: frontend
          image: resume-ai-frontend:latest
          ports:
            - containerPort: 80
              name: http
          env:
            - name: REACT_APP_API_URL
              value: "http://resume-backend-service:5000"
            - name: REACT_APP_ENVIRONMENT
              value: "production"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: resume-frontend-service
  labels:
    app: resume-frontend
    tier: frontend
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
  selector:
    app: resume-frontend
    tier: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: resume-frontend-nodeport
  labels:
    app: resume-frontend
    tier: frontend
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
      protocol: TCP
      name: http
  selector:
    app: resume-frontend
    tier: frontend
